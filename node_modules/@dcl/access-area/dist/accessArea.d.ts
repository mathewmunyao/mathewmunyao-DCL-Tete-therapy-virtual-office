/// <reference types="dcl" />
export declare type Config = {
    name?: string;
    contract?: string;
    chain?: ChainType;
    nftType?: NFTType;
    type: Type;
    debug: boolean;
    tokenId?: string;
    transform: TransformConstructorArgs;
    wearables?: string[];
    wearablesMatch?: Match;
    allowedAddresses?: string[];
    deniedMessage?: string;
    onDenied?: () => void;
};
export declare enum Type {
    NFT = 0,
    HASWEARABLES = 1,
    WEARABLESON = 2,
    ADDRESS = 3
}
export declare enum Match {
    ANY = 0,
    ALL = 1
}
export declare enum ChainType {
    ETH = 0,
    POLYGON = 1
}
export declare enum NFTType {
    ERC721 = 0,
    ERC1155 = 1
}
export declare function createArea(data: Config): AccessArea;
declare class AccessArea extends Entity {
    data: Config;
    constructor(data: Config);
    updateDeniedAction(action: () => void): void;
    updateDeniedMessage(message: string): void;
}
export {};
